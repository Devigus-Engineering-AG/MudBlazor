@page "/components/menu"

<DocsPage>
    <DocsPageHeader Title="Menus" Component="@nameof(MudMenu)">
        <Description>
            <MudAlert Class="mt-4" Severity="Severity.Warning">
                Note: Blazor static rendering is not supported.
                <MudLink Href="/getting-started/installation#manual-install-add-components" Target="_blank">See install guide for more info</MudLink>.
            </MudAlert>
        </Description>
    </DocsPageHeader>
    <DocsPageContent>

        <DocsPageSection>
            <SectionHeader Title="Simple Menu">
                <Description>
                    This example demonstrates a basic menu with default behavior.
                </Description>
            </SectionHeader>
            <SectionContent Code="@nameof(MenuSimpleExample)">
                <MenuSimpleExample />
            </SectionContent>
        </DocsPageSection>

        <DocsPageSection>
            <SectionHeader Title="Customization">
            </SectionHeader>
            <SectionSubGroups>
                <DocsPageSection>
                    <SectionHeader Title="Menu">
                        <Description>
                            The menu button provides the same options and behavior as a standard button.
                        </Description>
                    </SectionHeader>
                    <SectionContent Code="@nameof(MenuCustomizationExample)" ShowCode="false">
                        <MenuCustomizationExample />
                    </SectionContent>
                </DocsPageSection>

                <DocsPageSection>
                    <SectionHeader Title="Menu Items">
                        <Description>
                            Use the <CodeInline>Icon</CodeInline> property on a menu item to show an icon and <CodeInline>IconColor</CodeInline> to change its color.
                        </Description>
                    </SectionHeader>
                    <SectionContent Code="@nameof(MenuItemCustomizationExample)" ShowCode="false">
                        <MenuItemCustomizationExample />
                    </SectionContent>
                </DocsPageSection>

                <DocsPageSection>
                    <SectionHeader Title="Icon Buttons">
                        <Description>
                            When an <CodeInline>Icon</CodeInline> is provided, the menu button is rendered as an <CodeInline>IconButton</CodeInline>.
                        </Description>
                    </SectionHeader>
                    <SectionContent Code="@nameof(MenuIconButtonsExample)" ShowCode="false">
                        <MenuIconButtonsExample />
                    </SectionContent>
                </DocsPageSection>

                <DocsPageSection>
                    <SectionHeader Title="Custom Activator">
                        <Description>
                            Use the <CodeInline>ActivatorContent</CodeInline> render fragment to define a custom activator element for opening the menu.
                        </Description>
                    </SectionHeader>
                    <SectionContent Code="@nameof(MenuActivatorExample1)" ShowCode="false">
                        <MenuActivatorExample1 />
                    </SectionContent>
                </DocsPageSection>

                <DocsPageSection>
                    <SectionHeader Title="Max Height">
                        <Description>
                            Set a maximum height for the menu using the <CodeInline>MaxHeight</CodeInline> property to enable scrolling.
                        </Description>
                    </SectionHeader>
                    <SectionContent Code="@nameof(MenuMaxHeightExample)" ShowCode="false">
                        <MenuMaxHeightExample />
                    </SectionContent>
                </DocsPageSection>
            </SectionSubGroups>
        </DocsPageSection>

        <DocsPageSection>
            <SectionHeader Title="Nested Menu">
                <Description>
                    Cascading menus, also known as nested menus, allow users to navigate through a wide range of options by presenting multiple levels of hierarchical menus.
                    Using the pattern shown below, multiple menus can be nested.
                    Hover your mouse over submenus (denoted by an arrow) to open them.
                </Description>
            </SectionHeader>
            <SectionContent Code="@nameof(MenuWithNestingExample)" ShowCode="true">
                <MenuWithNestingExample />
            </SectionContent>
        </DocsPageSection>

        <DocsPageSection>
            <SectionHeader Title="Two-way Binding">
                <Description>
                    The <CodeInline>Open</CodeInline> parameter supports two-way binding,
                    allowing you to control the menu's visibility programmatically and synchronize its state with a boolean property.
                </Description>
            </SectionHeader>
            <SectionContent Code="@nameof(MenuTwoWayBindingExample)" ShowCode="true">
                <MenuTwoWayBindingExample />
            </SectionContent>
        </DocsPageSection>

        <DocsPageSection>
            <SectionHeader Title="Interaction">
            </SectionHeader>
            <SectionSubGroups>
                <DocsPageSection>
                    <SectionHeader Title="Mouse Events">
                        <Description>
                            Use the <CodeInline>ActivationEvent</CodeInline> property to specify which mouse event opens the menu.
                        </Description>
                    </SectionHeader>
                    <SectionContent Code="@nameof(MenuActivatorExample2)" ShowCode="false">
                        <MenuActivatorExample2 />
                    </SectionContent>
                </DocsPageSection>
                <DocsPageSection>
                    <SectionHeader Title="Cursor Position">
                        <Description>
                            Enable the <CodeInline>PositionAtCursor</CodeInline> property to open the menu at the cursor's location.
                        </Description>
                    </SectionHeader>
                    <SectionContent Code="@nameof(MenuActivatorOnMouseExample)" ShowCode="false">
                        <MenuActivatorOnMouseExample />
                    </SectionContent>
                </DocsPageSection>
                <DocsPageSection>
                    <SectionHeader Title="Context Menu">
                        <Description>
                            Implement context menus with custom logic. When <CodeInline>Label</CodeInline>, <CodeInline>Icon</CodeInline>, 
                            and <CodeInline>ActivatorContent</CodeInline> are unset, no button is rendered and the menu can only be opened programmatically.
                        </Description>
                    </SectionHeader>
                    <SectionContent Code="@nameof(ContextMenuExample)" ShowCode="false">
                        <ContextMenuExample/>
                    </SectionContent>
                </DocsPageSection>
            </SectionSubGroups>
        </DocsPageSection>
        
        <DocsPageSection>
            <SectionHeader Title="Placement">
                <Description>
                    The component uses <MudLink Href="/components/popover">MudPopover</MudLink> to place its menu. Adjust the 
                    <CodeInline>AnchorOrigin</CodeInline> and <CodeInline>TransformOrigin</CodeInline> properties to control the menu's position.
                    For more details and examples, visit the <MudLink Color="Color.Secondary" Href="/components/popover">popover documentation page</MudLink>.
                </Description>
            </SectionHeader>
            <SectionContent Code="@nameof(MenuAdvancedPopoverExample)" ShowCode="false">
                <MenuAdvancedPopoverExample />
            </SectionContent>
        </DocsPageSection>
    </DocsPageContent>
</DocsPage>

